type Pokemon {
	id: ID!
	number: Int!
	name: String!
	weight: PokemonDimension!
	height: PokemonDimension!
	types: [String!]!
	maxCP: Int!
	maxHP: Int!
	evolutions: [Pokemon!]!
	previousEvolutions: [Pokemon!]!
	image: String!
	sound: String!

	isFavorite: Boolean!
}

type PokemonConnection {
	limit: Int!
	offset: Int!
	count: Int!
	edges: [Pokemon!]!
}

input PokemonsQueryInput {
	limit: Int = 10
	offset: Int = 0
	search: String
	filter: PokemonFilterInput
}

input PokemonFilterInput {
	type: String
	isFavorite: Boolean
}

type PokemonDimension {
	minimum: String!
	maximum: String!
}

type Query {
	pokemons(query: PokemonsQueryInput!): PokemonConnection!
	pokemonByName(name: String!): Pokemon
	pokemonById(id: ID!): Pokemon
	pokemonTypes: [String!]!
}

type Mutation {
	favoritePokemon(id: ID!): Pokemon

	unFavoritePokemon(id: ID!): Pokemon
}

type Root {
	query: Query!
}